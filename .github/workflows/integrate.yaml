 
# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
    push:
      branches: [ master ]
    pull_request:
      branches: [ master ]


jobs:
  crawlclima:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    env:
      COMPOSE_FILE: docker/crawlclima/docker-compose.yml
      PYTHON_VERSION: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2

    - uses: goanpeca/setup-miniconda@v1
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        activate-environment: alertacapture
        environment-file: docker/crawlclima/environment-3.7.yml
        channels: conda-forge

    - name: Install dependencies
      shell: bash -l {0}
      run: |
        make -f docker/crawlclima/Makefile install_alertadenguecaptura

    - name: Lint with flake8
      shell: bash -l {0}
      run: |
        make -f docker/crawlclima/Makefile  flake8_crawlclima

    - name: Tests Crawclima
      shell: bash -l {0}
      run: |
        make -f docker/crawlclima/Makefile test_crawlclima

  downloader_app:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    env:
      COMPOSE_FILE: docker/downloader/downloader-compose.yml
      PYTHON_VERSION: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2

    - uses: goanpeca/setup-miniconda@v1
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        activate-environment: satellite
        environment-file: docker/downloader/environment-3.7.yml
        channels: conda-forge

    - name: Install dependencies
      shell: bash -l {0}
      run: |
        make -f docker/downloader/Makefile install_alertadenguecaptura

    - name: Copy env_file as env
      shell: bash -l {0}
      run: |
        cp docker/downloader/env_sample docker/downloader/.env

    - name: Lint with flake8
      shell: bash -l {0}
      run: |
        make -f docker/downloader/Makefile flake8_downloader_app

    - name: Configure credentials to downloader_app
      shell: bash -l {0}
      env:
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
      run: |
        make -f docker/downloader/Makefile configure_ci_downloader_app
        mkdir -p /home/runner/.config/earthengine/
        cp credentials /home/runner/.config/earthengine/credentials
        cat credentials
        echo $CLIENT_SECRET
        cat downloader_app/mycreds.txt

    - name: Tests Downloader_app
      shell: bash -l {0}
      run: |
        ls -la
        make -f docker/downloader/Makefile test_downloader_app
